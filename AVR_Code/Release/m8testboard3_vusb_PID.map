Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                              ./usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              ./usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv/usbdrv.o
usbDeviceAddr       0x1               ./usbdrv/usbdrv.o
usbRxToken          0x1               ./usbdrv/usbdrv.o
usbInputBufOffset   0x1               ./usbdrv/usbdrv.o
usbMsgPtr           0x2               ./usbdrv/usbdrv.o
usbRxLen            0x1               ./usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv/usbdrv.o
TempSet             0x2               ./main.o
usbCurrentTok       0x1               ./usbdrv/usbdrv.o
usbConfiguration    0x1               ./usbdrv/usbdrv.o
usbRxBuf            0x16              ./usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
LOAD ./usbdrv/oddebug.o
LOAD ./usbdrv/usbdrv.o
LOAD ./usbdrv/usbdrvasm.o
LOAD ./adc.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6ec
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
 .progmem.data.usbDescriptorConfiguration
                0x0000000000000026       0x12 ./usbdrv/usbdrv.o
                0x0000000000000026                usbDescriptorConfiguration
 .progmem.data.usbDescriptorDevice
                0x0000000000000038       0x12 ./usbdrv/usbdrv.o
                0x0000000000000038                usbDescriptorDevice
 .progmem.data.usbDescriptorStringDevice
                0x000000000000004a        0xa ./usbdrv/usbdrv.o
                0x000000000000004a                usbDescriptorStringDevice
 .progmem.data.usbDescriptorStringVendor
                0x0000000000000054       0x16 ./usbdrv/usbdrv.o
                0x0000000000000054                usbDescriptorStringVendor
 .progmem.data.usbDescriptorString0
                0x000000000000006a        0x4 ./usbdrv/usbdrv.o
                0x000000000000006a                usbDescriptorString0
                0x000000000000006e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000006e                __ctors_start = .
 *(.ctors)
                0x000000000000006e                __ctors_end = .
                0x000000000000006e                __dtors_start = .
 *(.dtors)
                0x000000000000006e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000006e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x000000000000006e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000006e        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000007a       0x16 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                0x000000000000007a                __do_copy_data
 .init4         0x0000000000000090       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000090                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000a0        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a4        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x00000000000000a4                __vector_1
                0x00000000000000a4                __vector_12
                0x00000000000000a4                __bad_interrupt
                0x00000000000000a4                __vector_6
                0x00000000000000a4                __vector_3
                0x00000000000000a4                __vector_11
                0x00000000000000a4                __vector_13
                0x00000000000000a4                __vector_17
                0x00000000000000a4                __vector_7
                0x00000000000000a4                __vector_5
                0x00000000000000a4                __vector_4
                0x00000000000000a4                __vector_9
                0x00000000000000a4                __vector_15
                0x00000000000000a4                __vector_8
                0x00000000000000a4                __vector_14
                0x00000000000000a4                __vector_10
                0x00000000000000a4                __vector_16
                0x00000000000000a4                __vector_18
 .text          0x00000000000000a6        0x0 ./usbdrv/oddebug.o
 .text          0x00000000000000a6        0x0 ./usbdrv/usbdrv.o
 .text          0x00000000000000a6      0x28c ./usbdrv/usbdrvasm.o
                0x00000000000000a6                usbCrc16
                0x00000000000000d0                usbCrc16Append
                0x00000000000000d8                __vector_2
 .text          0x0000000000000332        0x0 ./adc.o
 .text          0x0000000000000332        0x0 ./main.o
 .text          0x0000000000000332        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000332        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000332        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000332                . = ALIGN (0x2)
 *(.text.*)
 .text.usbPoll  0x0000000000000332      0x1fc ./usbdrv/usbdrv.o
                0x0000000000000332                usbPoll
 .text.usbInit  0x000000000000052e        0xe ./usbdrv/usbdrv.o
                0x000000000000052e                usbInit
 .text.adc_on   0x000000000000053c       0x14 ./adc.o
                0x000000000000053c                adc_on
 .text.adc_one  0x0000000000000550       0x22 ./adc.o
                0x0000000000000550                adc_one
 .text.adc_multiple
                0x0000000000000572       0x52 ./adc.o
                0x0000000000000572                adc_multiple
 .text.adc_off  0x00000000000005c4        0x4 ./adc.o
                0x00000000000005c4                adc_off
 .text.usbFunctionSetup
                0x00000000000005c8       0x3e ./main.o
                0x00000000000005c8                usbFunctionSetup
 .text.usbFunctionWrite
                0x0000000000000606       0x36 ./main.o
                0x0000000000000606                usbFunctionWrite
 .text.startup.main
                0x000000000000063c       0xac ./main.o
                0x000000000000063c                main
 .text.libgcc.mul
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000006e8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006e8        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x00000000000006e8                exit
                0x00000000000006e8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006e8        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006ec                _etext = .

.data           0x0000000000800060        0x2 load address 0x00000000000006ec
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x0 ./usbdrv/oddebug.o
 .data          0x0000000000800060        0x0 ./usbdrv/usbdrv.o
 .data          0x0000000000800060        0x0 ./usbdrv/usbdrvasm.o
 .data          0x0000000000800060        0x0 ./adc.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.usbMsgLen
                0x0000000000800060        0x1 ./usbdrv/usbdrv.o
 .data.usbTxLen
                0x0000000000800061        0x1 ./usbdrv/usbdrv.o
                0x0000000000800061                usbTxLen
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end, .)

.bss            0x0000000000800062       0x46
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000800062        0x0 ./usbdrv/oddebug.o
 .bss           0x0000000000800062        0x0 ./usbdrv/usbdrv.o
 .bss           0x0000000000800062        0x0 ./usbdrv/usbdrvasm.o
 .bss           0x0000000000800062        0x0 ./adc.o
 .bss           0x0000000000800062        0x0 ./main.o
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.usbMsgFlags
                0x0000000000800062        0x1 ./usbdrv/usbdrv.o
 .bss.walues.1667
                0x0000000000800063        0xe ./adc.o
 .bss.dataLength
                0x0000000000800071        0x1 ./main.o
 .bss.dataReceived
                0x0000000000800072        0x1 ./main.o
 .bss.replyBuf  0x0000000000800073        0x8 ./main.o
                0x0000000000800073                replyBuf
 .bss.flag      0x000000000080007b        0x1 ./main.o
                0x000000000080007b                flag
 *(COMMON)
 COMMON         0x000000000080007c       0x2a ./usbdrv/usbdrv.o
                0x000000000080007c                usbTxBuf
                0x0000000000800087                usbDeviceAddr
                0x0000000000800088                usbRxToken
                0x0000000000800089                usbInputBufOffset
                0x000000000080008a                usbMsgPtr
                0x000000000080008c                usbRxLen
                0x000000000080008d                usbNewDeviceAddr
                0x000000000080008e                usbCurrentTok
                0x000000000080008f                usbConfiguration
                0x0000000000800090                usbRxBuf
 COMMON         0x00000000008000a6        0x2 ./main.o
                0x00000000008000a6                TempSet
                0x00000000008000a8                PROVIDE (__bss_end, .)
                0x00000000000006ec                __data_load_start = LOADADDR (.data)
                0x00000000000006ee                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000a8        0x0
                0x00000000008000a8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000a8                PROVIDE (__noinit_end, .)
                0x00000000008000a8                _end = .
                0x00000000008000a8                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./usbdrv/oddebug.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./usbdrv/usbdrv.o
 .comment       0x0000000000000011       0x12 ./adc.o
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(m8testboard3_vusb_PID.elf elf32-avr)
LOAD linker stubs
