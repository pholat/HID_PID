Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               ./usbdrv/usbdrv.o
usbDeviceAddr       0x1               ./usbdrv/usbdrv.o
usbRxToken          0x1               ./usbdrv/usbdrv.o
usbInputBufOffset   0x1               ./usbdrv/usbdrv.o
usbMsgPtr           0x2               ./usbdrv/usbdrv.o
usbRxLen            0x1               ./usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               ./usbdrv/usbdrv.o
usbCurrentTok       0x1               ./usbdrv/usbdrv.o
usbConfiguration    0x1               ./usbdrv/usbdrv.o
usbRxBuf            0x16              ./usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./usbdrv/oddebug.o
LOAD ./usbdrv/usbdrv.o
LOAD ./usbdrv/usbdrvasm.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x55a
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026       0x48 ./usbdrv/usbdrv.o
                0x00000026                usbDescriptorString0
                0x0000002a                usbDescriptorStringVendor
                0x00000040                usbDescriptorStringDevice
                0x0000004a                usbDescriptorDevice
                0x0000005c                usbDescriptorConfiguration
                0x0000006e                . = ALIGN (0x2)
                0x0000006e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000006e        0x0 linker stubs
 *(.trampolines*)
                0x0000006e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000006e                __ctors_start = .
 *(.ctors)
                0x0000006e                __ctors_end = .
                0x0000006e                __dtors_start = .
 *(.dtors)
                0x0000006e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000006e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000006e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000006e        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000007a       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x0000007a                __do_copy_data
 .init4         0x00000090       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00000090                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000a0        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000a4        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x000000a4                __vector_1
                0x000000a4                __vector_12
                0x000000a4                __bad_interrupt
                0x000000a4                __vector_6
                0x000000a4                __vector_3
                0x000000a4                __vector_11
                0x000000a4                __vector_13
                0x000000a4                __vector_17
                0x000000a4                __vector_7
                0x000000a4                __vector_5
                0x000000a4                __vector_4
                0x000000a4                __vector_9
                0x000000a4                __vector_15
                0x000000a4                __vector_8
                0x000000a4                __vector_14
                0x000000a4                __vector_10
                0x000000a4                __vector_16
                0x000000a4                __vector_18
 .text          0x000000a6        0x0 ./usbdrv/oddebug.o
 .text          0x000000a6      0x1d8 ./usbdrv/usbdrv.o
                0x000000a6                usbPoll
                0x00000270                usbInit
 .text          0x0000027e      0x28c ./usbdrv/usbdrvasm.o
                0x0000027e                usbCrc16
                0x000002a8                usbCrc16Append
                0x000002b0                __vector_2
 .text          0x0000050a       0x4c ./main.o
                0x0000050a                usbFunctionSetup
                0x00000520                main
 .text          0x00000556        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x00000556        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x00000556        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00000556                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000556        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000556        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000556        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00000556                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000556        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x00000556                exit
                0x00000556                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000556        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000055a                _etext = .

.data           0x00800060        0x2 load address 0x0000055a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./usbdrv/oddebug.o
 .data          0x00800060        0x2 ./usbdrv/usbdrv.o
                0x00800060                usbTxLen
 .data          0x00800062        0x0 ./usbdrv/usbdrvasm.o
 .data          0x00800062        0x0 ./main.o
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x00800062        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062       0x2b
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x00800062        0x0 ./usbdrv/oddebug.o
 .bss           0x00800062        0x1 ./usbdrv/usbdrv.o
 .bss           0x00800063        0x0 ./usbdrv/usbdrvasm.o
 .bss           0x00800063        0x0 ./main.o
 .bss           0x00800063        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x00800063        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x00800063        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800063       0x2a ./usbdrv/usbdrv.o
                0x00800063                usbTxBuf
                0x0080006e                usbDeviceAddr
                0x0080006f                usbRxToken
                0x00800070                usbInputBufOffset
                0x00800071                usbMsgPtr
                0x00800073                usbRxLen
                0x00800074                usbNewDeviceAddr
                0x00800075                usbCurrentTok
                0x00800076                usbConfiguration
                0x00800077                usbRxBuf
                0x0080008d                PROVIDE (__bss_end, .)
                0x0000055a                __data_load_start = LOADADDR (.data)
                0x0000055c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080008d        0x0
                0x0080008d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080008d                PROVIDE (__noinit_end, .)
                0x0080008d                _end = .
                0x0080008d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(m8testboard3_vusb.elf elf32-avr)
LOAD linker stubs
