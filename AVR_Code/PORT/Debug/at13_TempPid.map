Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                              ./pid.o (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                              ./pid.o (__divmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                              ./pid.o (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

pidData             0x12              ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./main.o
LOAD ./pid.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x934
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e        0x0 ./main.o
 .text          0x0000005e        0x0 ./pid.o
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000005e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                0x0000005e                . = ALIGN (0x2)
 *(.text.*)
 .text.Init     0x0000005e       0x3c ./main.o
                0x0000005e                Init
 .text.Get_Reference
                0x0000009a       0xbe ./main.o
                0x0000009a                Get_Reference
 .text.Get_Measurement
                0x00000158       0x4e ./main.o
                0x00000158                Get_Measurement
 .text.adc_on   0x000001a6       0xe4 ./main.o
                0x000001a6                adc_on
 .text.pwm_on   0x0000028a       0x4e ./main.o
                0x0000028a                pwm_on
 .text.__vector_4
                0x000002d8       0x56 ./main.o
                0x000002d8                __vector_4
 .text.__vector_9
                0x0000032e       0xac ./main.o
                0x0000032e                __vector_9
 .text.Set_Input
                0x000003da       0x50 ./main.o
                0x000003da                Set_Input
 .text.main     0x0000042a       0x5a ./main.o
                0x0000042a                main
 .text.pid_Init
                0x00000484       0xd2 ./pid.o
                0x00000484                pid_Init
 .text.pid_Controller
                0x00000556      0x2ae ./pid.o
                0x00000556                pid_Controller
 .text.pid_Reset_Integrator
                0x00000804       0x26 ./pid.o
                0x00000804                pid_Reset_Integrator
 .text.libgcc   0x0000082a       0x3e /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                0x0000082a                __mulsi3
 .text.libgcc   0x00000868       0x26 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                0x00000868                __divmodhi4
                0x00000868                _div
 .text.libgcc   0x0000088e       0x36 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                0x0000088e                __divmodsi4
 .text.libgcc   0x000008c4        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000008c4        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x000008c4        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000008c4       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x000008c4                __udivmodhi4
 .text.libgcc   0x000008ec       0x44 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                0x000008ec                __udivmodsi4
                0x00000930                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000930        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x00000930                exit
                0x00000930                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000930        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000934                _etext = .

.data           0x00800060      0x804 load address 0x00000934
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 ./pid.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 *(.data*)
 .data.tempPokojowa
                0x00800060        0x2 ./main.o
                0x00800060                tempPokojowa
 .data.tempSuszenia
                0x00800062        0x2 ./main.o
                0x00800062                tempSuszenia
 *(.rodata)
 *(.rodata*)
 .rodata.PT1000
                0x00800064      0x800 ./main.o
 *(.gnu.linkonce.d*)
                0x00800864                . = ALIGN (0x2)
                0x00800864                _edata = .
                0x00800864                PROVIDE (__data_end, .)

.bss            0x00800864       0x1d
                0x00800864                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x00800864        0x0 ./main.o
 .bss           0x00800864        0x0 ./pid.o
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x00800864        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 .bss.lessSec   0x00800864        0x2 ./main.o
                0x00800864                lessSec
 .bss.moreSec   0x00800866        0x2 ./main.o
                0x00800866                moreSec
 .bss.czasik    0x00800868        0x2 ./main.o
 .bss.gFlags    0x0080086a        0x1 ./main.o
                0x0080086a                gFlags
 .bss.i.1300    0x0080086b        0x2 ./main.o
 .bss.a.1301    0x0080086d        0x2 ./main.o
 *(COMMON)
 COMMON         0x0080086f       0x12 ./main.o
                0x0080086f                pidData
                0x00800881                PROVIDE (__bss_end, .)
                0x00000934                __data_load_start = LOADADDR (.data)
                0x00001138                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800881        0x0
                0x00800881                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800881                PROVIDE (__noinit_end, .)
                0x00800881                _end = .
                0x00800881                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x12a8
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .stab          0x000006cc      0x840 ./main.o
                                0x84c (size before relaxing)
 .stab          0x00000f0c      0x39c ./pid.o
                                0x534 (size before relaxing)

.stabstr        0x00000000      0xad0
 *(.stabstr)
 .stabstr       0x00000000      0xad0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(at13_TempPid.elf elf32-avr)
LOAD linker stubs
