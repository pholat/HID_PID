Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              ./main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./main.o
LOAD ./n5110.o
LOAD ./periphs.o
LOAD ./spi.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x126c
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026      0x800 ./main.o
                0x00000826                . = ALIGN (0x2)
                0x00000826                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000826        0x0 linker stubs
 *(.trampolines*)
                0x00000826                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000826                __ctors_start = .
 *(.ctors)
                0x00000826                __ctors_end = .
                0x00000826                __dtors_start = .
 *(.dtors)
                0x00000826                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000826        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x00000826                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000826        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000832       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x00000832                __do_copy_data
 .init4         0x00000848       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00000848                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000858        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000085c        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000085c                __vector_1
                0x0000085c                __vector_12
                0x0000085c                __bad_interrupt
                0x0000085c                __vector_6
                0x0000085c                __vector_11
                0x0000085c                __vector_13
                0x0000085c                __vector_17
                0x0000085c                __vector_7
                0x0000085c                __vector_5
                0x0000085c                __vector_4
                0x0000085c                __vector_9
                0x0000085c                __vector_2
                0x0000085c                __vector_15
                0x0000085c                __vector_8
                0x0000085c                __vector_14
                0x0000085c                __vector_10
                0x0000085c                __vector_16
                0x0000085c                __vector_18
 .text          0x0000085e        0x0 ./main.o
 .text          0x0000085e        0x0 ./n5110.o
 .text          0x0000085e        0x0 ./periphs.o
 .text          0x0000085e        0x0 ./spi.o
 .text          0x0000085e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000085e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x0000085e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000085e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000085e                . = ALIGN (0x2)
 *(.text.*)
 .text.pid      0x0000085e       0xb2 ./main.o
                0x0000085e                pid
 .text.pid_calc
                0x00000910       0x72 ./main.o
                0x00000910                pid_calc
 .text.main     0x00000982       0x50 ./main.o
                0x00000982                main
 .text.Get_Reference
                0x000009d2       0xb4 ./main.o
                0x000009d2                Get_Reference
 .text.__vector_3
                0x00000a86      0x134 ./main.o
                0x00000a86                __vector_3
 .text.ms_delay
                0x00000bba       0x46 ./main.o
                0x00000bba                ms_delay
 .text.periph_init
                0x00000c00       0x1c ./main.o
                0x00000c00                periph_init
 .text.lcd_write_byte
                0x00000c1c       0x80 ./n5110.o
                0x00000c1c                lcd_write_byte
 .text.lcd_init
                0x00000c9c       0xfe ./n5110.o
                0x00000c9c                lcd_init
 .text.lcd_dot  0x00000d9a       0x50 ./n5110.o
                0x00000d9a                lcd_dot
 .text.lcd_char
                0x00000dea       0x70 ./n5110.o
                0x00000dea                lcd_char
 .text.lcd_string
                0x00000e5a       0x3c ./n5110.o
                0x00000e5a                lcd_string
 .text.lcd_place
                0x00000e96       0x30 ./n5110.o
                0x00000e96                lcd_place
 .text.lcd_clear
                0x00000ec6       0x42 ./n5110.o
                0x00000ec6                lcd_clear
 .text.lcd_int  0x00000f08       0x96 ./n5110.o
                0x00000f08                lcd_int
 .text.lcd_bin  0x00000f9e       0x8e ./n5110.o
                0x00000f9e                lcd_bin
 .text.Init     0x0000102c       0x2a ./periphs.o
                0x0000102c                Init
 .text.Get_Measurement
                0x00001056       0x40 ./periphs.o
                0x00001056                Get_Measurement
 .text.adc_on   0x00001096       0xe4 ./periphs.o
                0x00001096                adc_on
 .text.pwm_on   0x0000117a       0x4e ./periphs.o
                0x0000117a                pwm_on
 .text.spi_init
                0x000011c8       0x44 ./spi.o
                0x000011c8                spi_init
 .text.spi_write_byte
                0x0000120c       0x34 ./spi.o
                0x0000120c                spi_write_byte
 .text.libgcc   0x00001240       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x00001240                __udivmodhi4
 .text.libgcc   0x00001268        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00001268        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001268        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x00001268                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001268        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x00001268                exit
                0x00001268                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001268        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000126c                _etext = .

.data           0x00800060      0x3ce load address 0x0000126c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x5 ./main.o
 .data          0x00800065        0x4 ./n5110.o
 .data          0x00800069        0x0 ./periphs.o
 .data          0x00800069        0x0 ./spi.o
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x00800069        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.KP       0x00800069        0x2 ./main.o
                0x00800069                KP
 .data.przyrost1
                0x0080006b        0x1 ./main.o
                0x0080006b                przyrost1
 .data.przyrost2
                0x0080006c        0x1 ./main.o
                0x0080006c                przyrost2
 *(.rodata)
 *(.rodata*)
 .rodata.ASCII  0x0080006d      0x1e0 ./main.o
 .rodata.ASCII  0x0080024d      0x1e0 ./n5110.o
 *(.gnu.linkonce.d*)
                0x0080042e                . = ALIGN (0x2)
 *fill*         0x0080042d        0x1 00
                0x0080042e                _edata = .
                0x0080042e                PROVIDE (__data_end, .)

.bss            0x0080042e       0x1c
                0x0080042e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080042e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x0080042e        0x0 ./main.o
 .bss           0x0080042e        0x0 ./n5110.o
 .bss           0x0080042e        0x0 ./periphs.o
 .bss           0x0080042e        0x0 ./spi.o
 .bss           0x0080042e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x0080042e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x0080042e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0080042e        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.ms        0x0080042e        0x2 ./main.o
 .bss.flag      0x00800430        0x1 ./main.o
 .bss.decys     0x00800431        0x2 ./main.o
 .bss.pwm       0x00800433        0x2 ./main.o
 .bss.PID_Flag  0x00800435        0x1 ./main.o
                0x00800435                PID_Flag
 .bss.KD        0x00800436        0x2 ./main.o
                0x00800436                KD
 .bss.KI        0x00800438        0x2 ./main.o
                0x00800438                KI
 .bss.counter.1487
                0x0080043a        0x2 ./main.o
 .bss.sum_error.1425
                0x0080043c        0x2 ./main.o
 .bss.old_error.1424
                0x0080043e        0x2 ./main.o
 .bss.sub_error.1426
                0x00800440        0x2 ./main.o
 .bss.set.1427  0x00800442        0x1 ./main.o
 .bss.ms        0x00800443        0x2 ./n5110.o
 .bss.flag      0x00800445        0x1 ./n5110.o
 .bss.decys     0x00800446        0x2 ./n5110.o
 .bss.pwm       0x00800448        0x2 ./n5110.o
 *(COMMON)
                0x0080044a                PROVIDE (__bss_end, .)
                0x0000126c                __data_load_start = LOADADDR (.data)
                0x0000163a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080044a        0x0
                0x0080044a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080044a                PROVIDE (__noinit_end, .)
                0x0080044a                _end = .
                0x0080044a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1b54
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .stab          0x000006cc      0x90c ./main.o
                                0x918 (size before relaxing)
 .stab          0x00000fd8      0x6e4 ./n5110.o
                                0x8ac (size before relaxing)
 .stab          0x000016bc      0x2b8 ./periphs.o
                                0x480 (size before relaxing)
 .stab          0x00001974      0x1e0 ./spi.o
                                0x3a8 (size before relaxing)

.stabstr        0x00000000      0xce4
 *(.stabstr)
 .stabstr       0x00000000      0xce4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(m8testboard_PID.elf elf32-avr)
LOAD linker stubs
